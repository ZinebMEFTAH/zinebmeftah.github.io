document.addEventListener("DOMContentLoaded", () => {
  const langToggle = document.querySelector(".lang-toggle");
const langSwitcher = document.querySelector(".lang-switcher");

if (langToggle && langSwitcher) {
  langToggle.addEventListener("click", (e) => {
    e.stopPropagation(); // prevent immediate close
    langSwitcher.classList.toggle("open");
  });

  // Close dropdown if you click outside it
  document.addEventListener("click", (e) => {
    if (!langSwitcher.contains(e.target)) {
      langSwitcher.classList.remove("open");
    }
  });
}

const burger = document.getElementById("burger");
const navLinks = document.querySelector(".nav-links");

if (burger && navLinks) {
  burger.addEventListener("click", () => {
    navLinks.classList.toggle("nav-active");
    burger.classList.toggle("toggle"); // Optional: animate lines
  });

  // Close menu when clicking outside
  document.addEventListener("click", (e) => {
    if (
      navLinks.classList.contains("nav-active") &&
      !navLinks.contains(e.target) &&
      !burger.contains(e.target)
    ) {
      navLinks.classList.remove("nav-active");
      burger.classList.remove("toggle");
    }
  });

  // Close menu on scroll
  window.addEventListener("scroll", () => {
    if (navLinks.classList.contains("nav-active")) {
      navLinks.classList.remove("nav-active");
      burger.classList.remove("toggle");
    }
  });
}

    // --- Translation Dictionary ---
    const translations = {
      fr: {
        "page.title": "Portfolio - Meftah Zineb",
        "nav.title": "Meftah Zineb",
        "header.title": "Meftah Zineb",
        "contact.heading": "Contact",
        "info.telephone": "‚òé T√©l√©phone",
        "info.email": "‚úâ Email",
        "info.linkedin": "üîó LinkedIn",
        "info.portfolio": "üåê Portfolio",
        "info.github": "üêô GitHub",
        "info.huggingface": "ü§ñ Hugging Face",
        "profile.heading": "√Ä propos de moi",
        "profile.greeting": "Bonjour, je suis Meftah Zineb.",
        "profile.text1": "√âtudiante en Informatique passionn√©e par l‚ÄôIA appliqu√©e √† la robotique et le d√©veloppement backend, je con√ßois des syst√®mes intelligents combinant LLM, deep learning et automatisation web. ",
        "profile.text2": "Mes projets mettent en ≈ìuvre des mod√®les OpenAI, des simulateurs interactifs, et des solutions compl√®tes de bout-en-bout.",
        "profile.more": "En savoir plus sur mon parcours",
        "projects.hover": "Survolez ou cliquez pour voir les d√©tails",
        "projects.link": "Voir le code sur GitHub",
        "projects.link.instagram" : "Voir la page sur Instagram",
        "projects.link.demo": "Voir la d√©mo",
        "projects.link.modelRepo": "D√©p√¥t du mod√®le",
        "projects.link.demoSpace": "Espace de d√©mo",
        "projects.link.githubRepo": "D√©p√¥t GitHub",
        "projects.link.liveDemo": "D√©mo en ligne",

        "projects.p1.title": "Personnalisation de produits par l‚ÄôIA",
        "projects.p1.short": "Transformez vos id√©es en produits uniques.",
        "projects.p1.desc": "Syst√®me permettant aux utilisateurs de transformer leurs id√©es en produits personnalis√©s via des mod√®les d‚ÄôIA, avec une transition vers la production.",

        "projects.p2.title": "News Wave",
        "projects.p2.short": "Votre actualit√© personnalis√©e avec l‚ÄôIA.",
        "projects.p2.desc": "Agr√©gateur de nouvelles personnalis√©es par l'IA qui offre des mises √† jour en temps r√©el √† partir des principales sources mondiales, filtr√©es selon les int√©r√™ts de l'utilisateur.",

        "projects.p3.title": "Optimisation Agricole",
        "projects.p3.short": "Agriculture durable bas√©e sur l‚ÄôIA.",
        "projects.p3.desc": "Projet IA d‚Äôoptimisation de la production agricole en Alg√©rie en utilisant des algorithmes de recherche sur graphes et de satisfaction de contraintes.",

        "projects.p4.title": "G-Jobs",
        "projects.p4.short": "Plateforme d‚Äôemploi intelligente en Alg√©rie.",
        "projects.p4.desc": "Une plateforme intelligente connectant les chercheurs d‚Äôemploi alg√©riens avec les recruteurs √† travers des filtres avanc√©s, messagerie, et suivi des candidatures.",

        "projects.p5.title": "Moteur de Recherche Avanc√©",
        "projects.p5.short": "Recherche documentaire avec TF-IDF & BM25.",
        "projects.p5.desc": "Moteur de recherche Java bas√© sur TF-IDF et BM25 pour indexer, analyser et trier efficacement des documents textuels avec pr√©cision.",

        "projects.p6.title": "Cha√Æne de Restaurants",
        "projects.p6.short": "Gestion multisites de restaurants.",
        "projects.p6.desc": "Syst√®me de gestion d‚Äôune cha√Æne de restaurants multi-pays, permettant une organisation optimale des r√©servations, des stocks et du personnel.",

        "projects.p7.title": "Mon Supermarch√© Num√©rique",
        "projects.p7.short": "Supermarch√© intelligent en ligne (CLI).",
        "projects.p7.desc": "Application CLI pour digitaliser la gestion d‚Äôun supermarch√© : fournisseurs, stock, ventes, rapports et statistiques.",

        "projects.p8.title": "Analyse du R√©seau Routier (MAP)",
        "projects.p8.short": "Algorithmes avanc√©s sur les graphes.",
        "projects.p8.desc": "Analyse de r√©seau routier √† Avignon bas√©e sur la th√©orie des graphes : chemins optimaux, connexit√©, performance r√©seau.",
        "header.subtitle": "Ing√©nieure en IA du futur | Apprentissage profond | Apprentissage automatique | D√©veloppeuse full-stack",
        "nav.contact": "Contact",
        "nav.profil": "Profil",
        "nav.formation": "Formation",
        "nav.publications": "Publications",
        "nav.projects": "Projets",
        "nav.competences": "Comp√©tences",
        "nav.langues": "Langues",
        "nav.experience": "Exp√©rience",
        "contact.heading": "Contact",
        "profil.heading": "√Ä Propos de Moi",
        "profil.greeting": "Bonjour, je suis Meftah Zineb.",
        "profil.bio1": "Architecte digital et innovateur passionn√©, je fusionne l'intelligence artificielle avec l'art du d√©veloppement pour cr√©er des solutions disruptives qui red√©finissent le futur.",
        "profil.bio2": "Explorateur des algorithmes de pointe et toujours en qu√™te de nouvelles id√©es, chaque projet est une aventure vers l'innovation.",
        "formation.heading": "Formation & Certifications",
        "formation.ensia": "ENSIA, Alg√©rie",
        "formation.ensiaDiplome": "<strong>Dipl√¥me :</strong> Ing√©nierie en Intelligence Artificielle (1 ≥·µâ et 2·µâ ann√©e valid√©es)",
        "formation.ensiaCert": "Voir dipl√¥me",
        "formation.avignon": "Universit√© d'Avignon (CERI), France",
        "formation.avignonDiplome": "<strong>Dipl√¥me :</strong> Data Science (3·µâ ann√©e en cours, excellents r√©sultats)",
        "formation.avignonCert": "Voir dipl√¥me",
        "publications.heading": "Publications",
        "publication.date": "üìÖ 20 d√©cembre 2024",
        "publication.location": "üìç Hugging Face",
        "publication.description": "D√©couvrez notre approche r√©volutionnaire qui utilise un fine-tuning invers√© pour g√©n√©rer des donn√©es synth√©tiques. Con√ßues pour extraire des mots-cl√©s pr√©cis, ces donn√©es servent √† entra√Æner des mod√®les de g√©n√©ration de tags ultra-performants.",
        "publication.cta": "Lire l'article complet",
        "publication.tableTitle": "Exemple de base de donn√©es",
        "projects.heading": "Projets et Exp√©riences",
        "competences.heading": "Comp√©tences",

        // D√©veloppement Web
        "competences.web": "üßë‚Äçüíª D√©veloppement Web",
        "competences.web.frontend": "Frontend : HTML, CSS, JavaScript, Bootstrap, AJAX, TensorFlow.js, HTML5 Canvas",
        "competences.web.backend": "Backend : Node.js, PHP, Python (Flask, Django), REST API, SQL",
        "competences.web.fullstack": "Full-Stack : Laravel, React, Django, Flask",
        "competences.web.database": "Base de donn√©es : MySQL, PostgreSQL",
        "competences.web.security": "S√©curit√© Web : Sessions, Cookies, CSRF, URL Rewriting",
        "competences.web.tools": "Outils associ√©s : Git, GitHub, GitHub Actions, Makefile",

        // Data Science & IA
        "competences.data": "ü§ñ Data Science & Intelligence Artificielle",
        "competences.data.tools": "Langages & Outils : Python, PyTorch, OpenAI API, Hugging Face, Scikit-learn, Pandas",
        "competences.data.models": "Mod√®les & Techniques : LLM, Fine-tuning, Diffusion Models, Reinforcement Learning, Classification, G√©n√©ration de donn√©es synth√©tiques",
        "competences.data.apps": "Applications IA : Vision par ordinateur, NLP, G√©n√©ration de tags, Sites web IA, Recommandation intelligente",
        "competences.data.projects": "Projets notables : LeRobot, G√©n√©rateur de sites web IA, News Wave, G√©n√©ration automatique de tags",
        "competences.data.extra": "Outils : Jupyter, Colab, Transformers, OpenAI Playground, TensorBoard, NumPy, Matplotlib",

        // Programmation
        "competences.programming": "üíª Programmation",
        "competences.programming.languages": "Langages : Python, C++, Java, PHP, JavaScript, Bash, SQL",
        "competences.programming.paradigms": "Paradigmes : POO, fonctionnelle, logique m√©tier",
        "competences.programming.experience": "Exp√©riences : Compilation, Algorithmes de graphes (Dijkstra, A*, BM25), Scripting CLI",
        "competences.programming.projects": "Projets : Compilateur Pascal-like, Optimisation r√©seaux, Moteur de recherche, CLI Supermarch√©, G√©n√©ration web via LLM",

        // Soft Skills
        "competences.soft": "ü§ù Comp√©tences interpersonnelles",
        "competences.soft.list": "Autonomie, travail en √©quipe, communication claire, leadership (GDSC, AYLP), r√©solution de probl√®mes, apprentissage rapide, rigueur technique, gestion de projet",

        // Comp√©tences compl√©mentaires
        "competences.extra": "üß© Comp√©tences compl√©mentaires",
        "competences.extra.cognitive": "Cognitives : pens√©e algorithmique, esprit critique, mod√©lisation",
        "competences.extra.techniques": "Techniques : API REST, WebSockets, CI/CD, Git workflows",
        "competences.extra.learning": "Apprentissage : veille technologique, frameworks IA",
        "competences.extra.presentation": "Communication : vulgarisation, r√©daction technique, pr√©sentations",
        "competences.extra.methods": "M√©thodologies : agile, GitHub Flow, conception modulaire, r√©utilisabilit√©",
        "competences.techSkills": "Comp√©tences Techniques",
        "competences.aiDataSkills": "IA & Data Science",
        "competences.softSkillsTitle": "Comp√©tences Personnelles",
        "competences.artificialIntelligence": "Intelligence Artificielle",
        "competences.dataScience": "Data Science",
        "competences.programming": "Programmation",
        "competences.web": "D√©veloppement Web",
        "competences.languages": "Langages",
        "competences.paradigms": "Paradigmes",
        "competences.frontend": "Frontend",
        "competences.backend": "Backend",
        "competences.databases": "Bases de donn√©es",
        "competences.tools": "Outils",
        "competences.aiModels": "Mod√®les & Techniques",
        "competences.aiTools": "Outils IA",
        "competences.dataAnalysis": "Analyse & Manipulation",
        "competences.dataProjects": "Projets notables",
        "competences.project1": "G√©n√©ration de donn√©es synth√©tiques pour fine-tuning",
        "competences.project2": "Moteur de recherche avec TF-IDF & BM25",
        "competences.teamwork": "Travail en √©quipe",
        "competences.leadership": "Leadership",
        "competences.problemSolving": "R√©solution de probl√®mes",
        "competences.continuousLearning": "Apprentissage continu",
        "competences.teamworkDesc": "Collaboration efficace, communication claire, esprit d'√©quipe",
        "competences.leadershipDesc": "Exp√©rience GDSC, mentorat, gestion de projets collaboratifs",
        "competences.problemSolvingDesc": "Pens√©e analytique, approche syst√©matique, solutions cr√©atives",
        "competences.continuousLearningDesc": "Veille technologique, adaptation rapide, autoformation",
          "experience.heading": "Exp√©rience & Leadership",
  "experience.card1.title": "Responsable IT",
  "experience.card1.detail": "Google Developer Student Club ENSIA (2023‚Äì2024)",
  "experience.card2.title": "Participant AYLP",
  "experience.card2.detail": "Northern Nevada International Center (2021) ‚Äì Programme Alg√©rien de Leadership des Jeunes",
  "experience.card2.cert": "Voir le certificat",
  "experience.card3.title": "Organisatrice d‚Äô√©v√©nements",
  "experience.card3.detail": "Hackathons, IA, D√©veloppement Web",
  "experience.card4.title": "Autres r√©alisations",
  "experience.card4.detail": "Participation √† divers hackathons et projets collaboratifs pour innover et exceller.",
  "experience.card4.item1": "Hackathon IA Avignon (24h, 2024)",
  "experience.card4.item2": "Mentor junior ‚Äì GDSC (2023)",
  "experience.card4.item3": "Projet encadr√© G-JOBS (2024) : t√¢ches, Git, revue",

  // Projects p0
  "projects.p0.title": "G√©n√©rateur de sites web IA",
  "projects.p0.short": "G√©n√©rez des sites web √† partir d‚Äôune consigne.",
  "projects.p0.desc": "Cr√©e des sites fonctionnels √† partir d‚Äôinstructions en langage naturel gr√¢ce aux LLM. Stack : Python, OpenAI API, automatisation web.",

  // Certificates section
  "certs.heading": "Certificats",
  "certs.pytorch.title": "Introduction au Deep Learning avec PyTorch ‚Äì DataCamp",
  "certs.pytorch.desc": "Formation en ligne sur les r√©seaux de neurones et l‚Äôutilisation de PyTorch.",
  "certs.aylp.title": "Algerian Youth Leadership Program ‚Äì NNIC",
  "certs.aylp.desc": "Programme d‚Äô√©change ax√© sur le leadership, l‚Äôinnovation et la collaboration interculturelle.",
  "certs.eplus.title": "Niveau d‚Äôanglais ‚Äì E-Plus Center",
  "certs.eplus.desc": "Attestation de comp√©tence en anglais.",
  "certs.fcc.title": "Responsive Web Design ‚Äì freeCodeCamp",
  "certs.fcc.desc": "Certification couvrant HTML, CSS, Flexbox et le design responsive.",
  "certs.cta": "Voir le certificat",

  // Languages section (keys named 'langues.*' in HTML)
  "langues.heading": "Langues",
  "langues.french": "Fran√ßais",
  "langues.frenchlevel": "Interm√©diaire (B2)",
  "langues.frenchCert": "Voir certificat",
  "langues.english": "Anglais",
  "langues.englishlevel": "Courant",
  "langues.englishCert": "Voir certificat",
  "langues.arabic": "Arabe",
  "langues.arabicLevel": "Langue maternelle",
  "experience.card4.item1": "Hackathon IA Avignon (24h, 2024)",
"experience.card4.item2": "Mentor junior ‚Äì GDSC (2023)",
"experience.card4.item3": "Projet encadr√© G-JOBS (2024) : t√¢ches, Git, revue",

"projects.p0.title": "G√©n√©rateur de sites web IA",
"projects.p0.short": "G√©n√©rez des sites web depuis une consigne.",
"projects.p0.desc": "Cr√©ation d'un syst√®me g√©n√©rant des sites web fonctionnels √† partir d'instructions en langage naturel gr√¢ce √† des mod√®les LLM. Stack : Python, OpenAI API, Automatisation web.",

"projects.p9.title": "LeRobot PushT Trainer",
"projects.p9.short": "Entra√Ænez/√©valuez des politiques PushT.",
"projects.p9.desc": "App web pour entra√Æner et √©valuer des politiques PushT. G√®re checkpoints et publication sur Hugging Face. Stack : Python, LeRobot, Gradio, CUDA.",

"projects.p10.title": "Simulateur de vision robotique",
"projects.p10.short": "Simulateur interactif de vision robotique.",
"projects.p10.desc": "Simulateur navigateur : robot sur grille, pick/place et commandes en langue naturelle. COCO-SSD pour la vision, A* pour le pathfinding. Stack : JS/Canvas, TF.js.",

"footer.copy": "¬© 2025 Meftah Zineb. Tous droits r√©serv√©s.",
"formation.bac": "Baccalaur√©at Scientifique ‚Äî Lyc√©e Abd-El-Kader El-Yajouri, Guemar (Alg√©rie)",
"formation.bacDiplome": "<strong>Mention :</strong> Excellent ‚Äî Moyenne 17,82 (Fili√®re scientifique)",
"formation.bacCert": "Voir attestation BAC",
"formation.bacTranscript": "Voir relev√©s de notes"
      },
      en: {
        "experience.card4.item1": "AI Hackathon Avignon (24h, 2024)",
        "experience.card4.item2": "Junior Mentor ‚Äì GDSC (2023)",
        "experience.card4.item3": "Supervised Project G‚ÄëJOBS (2024): tasks, Git, review",
        // --- Experience & Leadership ---
        "experience.heading": "Experience & Leadership",
        "experience.card1.title": "IT Manager",
        "experience.card1.detail": "Google Developer Student Club ENSIA (2023-2024)",
        "experience.card2.title": "AYLP Participant",
        "experience.card2.detail": "Northern Nevada International Center (2021) Algerian Youth Leadership Program",
        "experience.card2.cert": "View Certificate",
        "experience.card3.title": "Event Organizer",
        "experience.card3.detail": "Hackathons, AI, Web Development",
        "experience.card4.title": "Other Achievements",
        "experience.card4.detail": "Participated in various hackathons and collaborative projects to innovate and excel.",
        "page.title": "Portfolio - Zineb Meftah",
        "nav.title": "Zineb Meftah",
        "header.title": "Zineb Meftah",
        "contact.heading": "Contact",
        "info.telephone": "‚òé Phone",
        "info.email": "‚úâ Email",
        "info.linkedin": "üîó LinkedIn",
        "info.portfolio": "üåê Portfolio",
        "info.github": "üêô GitHub",
        "info.huggingface": "ü§ñ Hugging Face",
        "header.subtitle": "Future AI Engineer | Deep Learning | Machine Learning | Full-Stack Developer",
        "nav.contact": "Contact",
        "nav.profil": "About",
        "nav.formation": "Education",
        "nav.publications": "Publications",
        "nav.projects": "Projects",
        "nav.competences": "Skills",
        "nav.langues": "Languages",
        "nav.experience": "Experience",
        "contact.heading": "Contact",
        "profil.heading": "About Me",
        "profil.greeting": "Hi, I‚Äôm Zineb Meftah.",
        "profil.bio1": "A digital architect and passionate innovator, I blend AI with the art of development to create disruptive solutions that redefine the future.",
        "profil.bio2": "Explorer of cutting-edge algorithms and always pushing creative boundaries ‚Äî each project is a journey toward innovation.",
        "formation.heading": "Education & Certificates",
        "formation.ensia": "ENSIA, Algeria",
        "formation.ensiaDiplome": "<strong>Degree:</strong> Artificial Intelligence Engineering (1st & 2nd Year Completed)",
        "formation.ensiaCert": "View Certificate",
        "formation.avignon": "Universit√© d'Avignon (CERI), France",
        "formation.avignonDiplome": "<strong>Degree:</strong> Data Science (3rd year ongoing, excellent results)",
        "formation.avignonCert": "View Certificate",
        "publications.heading": "Publications",
        "publication.date": "üìÖ December 20, 2024",
        "publication.location": "üìç Hugging Face",
        "publication.description": "Discover our revolutionary approach using reverse fine-tuning to generate synthetic data. Designed to extract accurate keywords and train highly efficient tag generation models.",
        "publication.cta": "Read Full Article",
        "publication.tableTitle": "Sample Database",
        "projects.heading": "Projects & Experience",
        "projects.hover": "Hover or click to view details",
        "projects.link": "View Code on GitHub",
        "projects.link.instagram" : "View page on Instagram",
        "projects.link.demo": "View demo",
        "projects.link.modelRepo": "Model repo",
        "projects.link.demoSpace": "Demo space",
        "projects.link.githubRepo": "GitHub repo",
        "projects.link.liveDemo": "Live demo",

        "projects.p1.title": "AI Product Personalization",
        "projects.p1.short": "Turn your ideas into personalized products.",
        "projects.p1.desc": "A system enabling users to convert their ideas into custom products using AI models, with a smooth transition to production.",
        "projects.p2.title": "News Wave",
        "projects.p2.short": "Your AI-powered personalized news.",
        "projects.p2.desc": "AI-powered personalized news aggregator offering real-time updates from top global sources, filtered based on user interests.",
        "projects.p3.title": "Agricultural Plan Optimization",
        "projects.p3.short": "AI-based sustainable agriculture.",
        "projects.p3.desc": "AI project to optimize agricultural production in Algeria using graph search and constraint satisfaction algorithms.",
        "projects.p4.title": "G-Jobs",
        "projects.p4.short": "Smart job platform in Algeria.",
        "projects.p4.desc": "A smart platform connecting Algerian job seekers with employers through advanced filters, messaging, and job tracking tools.",
        "projects.p5.title": "Advanced Search Engine",
        "projects.p5.short": "Text search with TF-IDF & BM25.",
        "projects.p5.desc": "Java-based search engine using TF-IDF and BM25 to index, analyze, and accurately rank text documents.",
        "projects.p6.title": "Restaurant Chain",
        "projects.p6.short": "Multi-location restaurant management.",
        "projects.p6.desc": "Management system for a multi-country restaurant chain, enabling organized booking, inventory, and staff control.",
        "projects.p7.title": "My Online Supermarket",
        "projects.p7.short": "Smart CLI-based supermarket system.",
        "projects.p7.desc": "A command-line application for digitizing supermarket management: suppliers, stock, sales, reports, and statistics.",
        "projects.p8.title": "Road Network Analysis (MAP)",
        "projects.p8.short": "Advanced graph algorithms.",
        "projects.p8.desc": "Graph-based road network analysis in Avignon using algorithms for shortest paths, connectivity, and performance.",
        "projects.p0.title": "AI Website Generator",
        "projects.p0.short": "Generate websites from a prompt.",
        "projects.p0.desc": "Builds functional websites from natural language instructions using LLMs. Stack: Python, OpenAI API, Web automation.",

        "projects.p9.title": "LeRobot PushT Trainer",
        "projects.p9.short": "Train/evaluate PushT policies.",
        "projects.p9.desc": "Web app to train/evaluate PushT policies. Supports checkpoints and push to Hugging Face. Stack: Python, LeRobot, Gradio, CUDA.",

        "projects.p10.title": "Robot Vision Simulator",
        "projects.p10.short": "Interactive robot vision simulator.",
        "projects.p10.desc": "Browser simulator: grid nav, pick/place, natural‚Äëlanguage commands. COCO‚ÄëSSD vision, A* pathfinding. Stack: JS/Canvas, TF.js.",
        "profile.heading": "About Me",
        "profile.greeting": "Hello, I'm Meftah Zineb.",
        "profile.text1": "A computer science student passionate about AI applied to robotics and backend development, I design intelligent systems combining LLM, deep learning and web automation.",
        "profile.text2": "My projects implement OpenAI models, interactive simulators, and complete end-to-end solutions.",
        "profile.more": "Learn more about my journey",

        // --- Skills (Comp√©tences) ---
        "competences.heading": "Skills",

        // Web Development
        "competences.web": "üßë‚Äçüíª Web Development",
        "competences.web.frontend": "Frontend: HTML, CSS, JavaScript, Bootstrap, AJAX, TensorFlow.js, HTML5 Canvas",
        "competences.web.backend": "Backend: Node.js, PHP, Python (Flask, Django), REST API, SQL",
        "competences.web.fullstack": "Full-Stack: Laravel, React, Django, Flask",
        "competences.web.database": "Databases: MySQL, PostgreSQL",
        "competences.web.security": "Web Security: Sessions, Cookies, CSRF, URL Rewriting",
        "competences.web.tools": "Related Tools: Git, GitHub, GitHub Actions, Makefile",

        // Data Science & AI
        "competences.data": "ü§ñ Data Science & Artificial Intelligence",
        "competences.data.tools": "Languages & Tools: Python, PyTorch, OpenAI API, Hugging Face, Scikit-learn, Pandas",
        "competences.data.models": "Models & Techniques: LLM, Fine-tuning, Diffusion Models, Reinforcement Learning, Classification, Synthetic Data Generation",
        "competences.data.apps": "AI Applications: Computer Vision, NLP, Tag Generation, AI-powered websites, Smart Recommendation",
        "competences.data.projects": "Notable Projects: LeRobot, AI Website Generator, News Wave, Automatic Tag Generation",
        "competences.data.extra": "Tools: Jupyter, Colab, Transformers, OpenAI Playground, TensorBoard, NumPy, Matplotlib",

        // Programming
        "competences.programming": "üíª Programming",
        "competences.programming.languages": "Languages: Python, C++, Java, PHP, JavaScript, Bash, SQL",
        "competences.programming.paradigms": "Paradigms: OOP, Functional, Business Logic",
        "competences.programming.experience": "Experience: Compilation, Graph Algorithms (Dijkstra, A*, BM25), CLI Scripting",
        "competences.programming.projects": "Projects: Pascal-like Compiler, Network Optimization, Search Engine, Supermarket CLI, Web Generation via LLM",

        // Soft Skills
        "competences.soft": "ü§ù Interpersonal Skills",
        "competences.soft.list": "Autonomy, teamwork, clear communication, leadership (GDSC, AYLP), problem-solving, fast learning, technical rigor, project management",

        // Extra Skills
        "competences.extra": "üß© Extra Skills",
        "competences.extra.cognitive": "Cognitive: algorithmic thinking, critical mind, modeling",
        "competences.extra.techniques": "Technical: REST API, WebSockets, CI/CD, Git workflows",
        "competences.extra.learning": "Learning: tech watch, AI frameworks",
        "competences.extra.presentation": "Communication: popularization, technical writing, presentations",
        "competences.extra.methods": "Methodologies: agile, GitHub Flow, modular design, reusability",
        "competences.techSkills": "Technical Skills",
        "competences.aiDataSkills": "AI & Data Science",
        "competences.softSkillsTitle": "Personal Skills",
        "competences.artificialIntelligence": "Artificial Intelligence",
        "competences.dataScience": "Data Science",
        "competences.programming": "Programming",
        "competences.web": "Web Development",
        "competences.languages": "Languages",
        "competences.paradigms": "Paradigms",
        "competences.frontend": "Frontend",
        "competences.backend": "Backend",
        "competences.databases": "Databases",
        "competences.tools": "Tools",
        "competences.aiModels": "Models & Techniques",
        "competences.aiTools": "AI Tools",
        "competences.dataAnalysis": "Analysis & Manipulation",
        "competences.dataProjects": "Notable Projects",
        "competences.project1": "Synthetic data generation for fine-tuning",
        "competences.project2": "Search engine with TF-IDF & BM25",
        "competences.teamwork": "Teamwork",
        "competences.leadership": "Leadership",
        "competences.problemSolving": "Problem Solving",
        "competences.continuousLearning": "Continuous Learning",
        "competences.teamworkDesc": "Effective collaboration, clear communication, team spirit",
        "competences.leadershipDesc": "GDSC experience, mentoring, collaborative project management",
        "competences.problemSolvingDesc": "Analytical thinking, systematic approach, creative solutions",
        "competences.continuousLearningDesc": "Technology watch, quick adaptation, self-learning",
          "certs.heading": "Certificates",
  "certs.pytorch.title": "Introduction to Deep Learning with PyTorch ‚Äì DataCamp",
  "certs.pytorch.desc": "Online training on neural networks and using PyTorch.",
  "certs.aylp.title": "Algerian Youth Leadership Program ‚Äì NNIC",
  "certs.aylp.desc": "Exchange program focused on leadership, innovation, and cross-cultural collaboration.",
  "certs.eplus.title": "English Level ‚Äì E-Plus Center",
  "certs.eplus.desc": "Certificate of English proficiency.",
  "certs.fcc.title": "Responsive Web Design ‚Äì freeCodeCamp",
  "certs.fcc.desc": "Certificate covering HTML, CSS, Flexbox, and responsive design.",
  "certs.cta": "View Certificate",

  // Languages section (HTML uses 'langues.*' keys)
  "langues.heading": "Languages",
  "langues.french": "French",
  "langues.frenchlevel": "Intermediate (B2)",
  "langues.frenchCert": "View certificate",
  "langues.english": "English",
  "langues.englishlevel": "Fluent",
  "langues.englishCert": "View certificate",
  "langues.arabic": "Arabic",
  "langues.arabicLevel": "Native",
  "footer.copy": "¬© 2025 Zineb Meftah. All rights reserved.",
  "formation.bac": "Scientific Baccalaureate ‚Äî Abd-El-Kader El-Yajouri High School, Guemar (Algeria)",
"formation.bacDiplome": "<strong>Honors:</strong> Excellent ‚Äî Average 17.82 (Scientific stream)",
"formation.bacCert": "View BAC certificate",
"formation.bacTranscript": "View grade transcripts"
      },
      ar: {
        "profile.heading": "ŸÜÿ®ÿ∞ÿ© ÿπŸÜŸä",
        "experience.card4.item1": "ŸáÿßŸÉÿßÿ´ŸàŸÜ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä ÿ£ŸÅŸäŸÜŸäŸàŸÜ (24 ÿ≥ÿßÿπÿ©ÿå 2024)",
        "experience.card4.item2": "ŸÖÿ±ÿ¥ÿØÿ© ŸÖÿ®ÿ™ÿØÿ¶ÿ© ‚Äì GDSC (2023)",
        "experience.card4.item3": "ŸÖÿ¥ÿ±Ÿàÿπ ŸÖÿ§ÿ∑ÿ± G‚ÄëJOBS (2024): ÿßŸÑŸÖŸáÿßŸÖÿå Gitÿå ÿßŸÑŸÖÿ±ÿßÿ¨ÿπÿ©",
        "page.title": "ÿßŸÑŸÖÿπÿ±ÿ∂ - ŸÖŸÅÿ™ÿßÿ≠ ÿ≤ŸäŸÜÿ®",
        "nav.title": "ŸÖŸÅÿ™ÿßÿ≠ ÿ≤ŸäŸÜÿ®",
        "header.title": "ŸÖŸÅÿ™ÿßÿ≠ ÿ≤ŸäŸÜÿ®",
        "contact.heading": "ÿßŸÑÿßÿ™ÿµÿßŸÑ",
        "info.telephone": "‚òé ÿßŸÑŸáÿßÿ™ŸÅ",
        "info.email": "‚úâ ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä",
        "info.linkedin": "üîó ŸÑŸäŸÜŸÉÿØ ÿ•ŸÜ",
        "info.portfolio": "üåê ÿßŸÑŸÖŸàŸÇÿπ ÿßŸÑÿ¥ÿÆÿµŸä",
        "info.github": "üêô ÿ¨Ÿäÿ™Ÿáÿßÿ®",
        "info.huggingface": "ü§ñ Ÿáÿßÿ¨ŸäŸÜÿ∫ ŸÅÿßŸäÿ≥",
        "header.subtitle": "ŸÖŸáŸÜÿØÿ≥ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä ÿßŸÑŸÖÿ≥ÿ™ŸÇÿ®ŸÑŸä | ÿßŸÑÿ™ÿπŸÑŸÖ ÿßŸÑÿπŸÖŸäŸÇ | ÿßŸÑÿ™ÿπŸÑŸÖ ÿßŸÑÿ¢ŸÑŸä | ŸÖÿ∑Ÿàÿ± ŸÉÿßŸÖŸÑ ÿßŸÑÿ≠ÿ≤ŸÖÿ©",
        "nav.contact": "ÿßÿ™ÿµŸÑ",
        "nav.profil": "ŸÜÿ®ÿ∞ÿ©",
        "nav.formation": "ÿßŸÑÿ™ÿπŸÑŸäŸÖ",
        "nav.publications": "ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±ÿßÿ™",
        "nav.projects": "ÿßŸÑŸÖÿ¥ÿßÿ±Ÿäÿπ",
        "nav.competences": "ÿßŸÑŸÖŸáÿßÿ±ÿßÿ™",
        "nav.langues": "ÿßŸÑŸÑÿ∫ÿßÿ™",
        "nav.experience": "ÿßŸÑÿÆÿ®ÿ±ÿ©",
        "contact.heading": "ÿßÿ™ÿµŸÑ",
        "profil.heading": "ŸÜÿ®ÿ∞ÿ© ÿπŸÜŸä",
        "profil.greeting": "ŸÖÿ±ÿ≠ÿ®Ÿãÿßÿå ÿ£ŸÜÿß ŸÖŸÅÿ™ÿßÿ≠ ÿ≤ŸäŸÜÿ®.",
        "profil.bio1": "ÿ£ŸÜÿß ŸÖŸáŸÜÿØÿ≥ÿ© ÿ±ŸÇŸÖŸäÿ© ŸàŸÖÿ®ÿ™ÿπÿ© ÿ¥ÿ∫ŸàŸÅÿ© ÿ£ÿØŸÖÿ¨ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä ŸÖÿπ ŸÅŸÜ ÿßŸÑÿ™ÿ∑ŸàŸäÿ± ŸÑÿ•ŸÜÿ¥ÿßÿ° ÿ≠ŸÑŸàŸÑ ÿ´Ÿàÿ±Ÿäÿ© ÿ™ÿπŸäÿØ ÿ™ÿπÿ±ŸäŸÅ ÿßŸÑŸÖÿ≥ÿ™ŸÇÿ®ŸÑ.",
        "profil.bio2": "ŸÖÿ≥ÿ™ŸÉÿ¥ŸÅÿ© ŸÑÿ£ÿ≠ÿØÿ´ ÿßŸÑÿÆŸàÿßÿ±ÿ≤ŸÖŸäÿßÿ™ Ÿàÿ≥ÿßÿπŸäÿ© ÿØŸàŸÖŸãÿß Ÿàÿ±ÿßÿ° ÿ£ŸÅŸÉÿßÿ± ÿ¨ÿØŸäÿØÿ©ÿå ŸÉŸÑ ŸÖÿ¥ÿ±Ÿàÿπ ŸáŸà ŸÖÿ∫ÿßŸÖÿ±ÿ© ŸÜÿ≠Ÿà ÿßŸÑÿßÿ®ÿ™ŸÉÿßÿ±.",
        "formation.heading": "ÿßŸÑÿ™ÿπŸÑŸäŸÖ ŸàÿßŸÑÿ¥ŸáÿßÿØÿßÿ™",
        "formation.ensia": "ENSIAÿå ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±",
        "formation.ensiaDiplome": "<strong>ÿßŸÑÿ¥ŸáÿßÿØÿ©:</strong> ŸáŸÜÿØÿ≥ÿ© ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä (ÿßŸÑÿ≥ŸÜÿ© ÿßŸÑÿ£ŸàŸÑŸâ ŸàÿßŸÑÿ´ÿßŸÜŸäÿ©)",
        "formation.ensiaCert": "ÿπÿ±ÿ∂ ÿßŸÑÿ¥ŸáÿßÿØÿ©",
        "formation.avignon": "ÿ¨ÿßŸÖÿπÿ© ÿ£ŸÅŸäŸÜŸäŸàŸÜ (CERI)ÿå ŸÅÿ±ŸÜÿ≥ÿß",
        "formation.avignonDiplome": "<strong>ÿßŸÑÿ¥ŸáÿßÿØÿ©:</strong> ÿπŸÑŸàŸÖ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ (ÿßŸÑÿ≥ŸÜÿ© ÿßŸÑÿ´ÿßŸÑÿ´ÿ© ÿ¨ÿßÿ±Ÿäÿ©ÿå ŸÜÿ™ÿßÿ¶ÿ¨ ŸÖŸÖÿ™ÿßÿ≤ÿ©)",
        "formation.avignonCert": "ÿπÿ±ÿ∂ ÿßŸÑÿ¥ŸáÿßÿØÿ©",
        "publications.heading": "ÿßŸÑŸÖŸÜÿ¥Ÿàÿ±ÿßÿ™",
        "publication.date": "üìÖ 20 ÿØŸäÿ≥ŸÖÿ®ÿ± 2024",
        "publication.location": "üìç Hugging Face",
        "publication.description": "ÿßŸÉÿ™ÿ¥ŸÅ ŸÜŸáÿ¨ŸÜÿß ÿßŸÑÿ´Ÿàÿ±Ÿä ÿßŸÑÿ∞Ÿä Ÿäÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑÿ∂ÿ®ÿ∑ ÿßŸÑÿπŸÉÿ≥Ÿä ŸÑÿ™ŸàŸÑŸäÿØ ÿ®ŸäÿßŸÜÿßÿ™ ÿ™ÿ±ŸÉŸäÿ®Ÿäÿ©. ÿµŸÖŸÖÿ™ Ÿáÿ∞Ÿá ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ŸÑÿßÿ≥ÿ™ÿÆÿ±ÿßÿ¨ ÿßŸÑŸÉŸÑŸÖÿßÿ™ ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ© ÿßŸÑÿØŸÇŸäŸÇÿ© Ÿàÿ™ÿØÿ±Ÿäÿ® ŸÜŸÖÿßÿ∞ÿ¨ ÿ™ŸàŸÑŸäÿØ ÿßŸÑÿπŸÑÿßŸÖÿßÿ™ ÿ®ŸÉŸÅÿßÿ°ÿ© ÿπÿßŸÑŸäÿ©.",
        "publication.cta": "ÿßŸÇÿ±ÿ£ ÿßŸÑŸÖŸÇÿßŸÑ ÿßŸÑŸÉÿßŸÖŸÑ",
        "publication.tableTitle": "ÿπŸäŸÜÿ© ŸÇÿßÿπÿØÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
        "projects.heading": "ÿßŸÑŸÖÿ¥ÿßÿ±Ÿäÿπ ŸàÿßŸÑÿÆÿ®ÿ±ÿ©",
        "projects.product.title": "ÿ™ÿÆÿµŸäÿµ ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ ÿ®ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä",
        "projects.product.description": "ÿ≠ŸàŸëŸÑ ÿ£ŸÅŸÉÿßÿ±ŸÉ ÿ•ŸÑŸâ ŸÖŸÜÿ™ÿ¨ÿßÿ™ ŸÖÿÆÿµÿµÿ© ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä.",
        "projects.product.details": "ŸÜÿ∏ÿßŸÖ Ÿäÿ≥ŸÖÿ≠ ŸÑŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿ®ÿ™ÿ≠ŸàŸäŸÑ ÿ£ŸÅŸÉÿßÿ±ŸáŸÖ ÿ•ŸÑŸâ ŸÖŸÜÿ™ÿ¨ÿßÿ™ ŸÖÿÆÿµÿµÿ© ÿπÿ®ÿ± ŸÜŸÖÿßÿ∞ÿ¨ ÿ∞ŸÉÿßÿ° ÿßÿµÿ∑ŸÜÿßÿπŸä ŸÖÿπ ÿ•ŸÖŸÉÿßŸÜŸäÿ© ÿ•ŸÜÿ™ÿßÿ¨Ÿáÿß.",
        "projects.newswave.title": "News Wave",
        "projects.newswave.description": "ŸÖŸàÿ¨ÿ≤ ÿ£ÿÆÿ®ÿßÿ± ÿ¥ÿÆÿµŸä ŸÖÿØÿπŸàŸÖ ÿ®ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä.",
        "projects.newswave.details": "ÿ™ÿ∑ÿ®ŸäŸÇ Ÿäÿ¨ŸÑÿ® ŸÑŸÉ ÿ¢ÿÆÿ± ÿßŸÑÿ£ÿÆÿ®ÿßÿ± ŸÖŸÜ ŸÖÿµÿßÿØÿ± ŸÖŸàÿ´ŸàŸÇÿ© ŸàŸäÿÆÿµÿµŸáÿß ÿ≠ÿ≥ÿ® ÿßŸáÿ™ŸÖÿßŸÖÿßÿ™ŸÉ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä.",
        "projects.agriopt.title": "ÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿÆÿ∑ÿ© ÿßŸÑÿ≤ÿ±ÿßÿπŸäÿ©",
        "projects.agriopt.description": "ÿ≤ÿ±ÿßÿπÿ© ÿ∞ŸÉŸäÿ© ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä.",
        "projects.agriopt.details": "ŸÖÿ¥ÿ±Ÿàÿπ ŸÑÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿ•ŸÜÿ™ÿßÿ¨ ÿßŸÑÿ≤ÿ±ÿßÿπŸä ŸÅŸä ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ± ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿÆŸàÿßÿ±ÿ≤ŸÖŸäÿßÿ™ ÿßŸÑÿ®ÿ≠ÿ´ ŸàÿßŸÑŸÇŸäŸàÿØ ŸÑÿ™ÿ≠ŸÇŸäŸÇ ÿßŸÑÿßŸÉÿ™ŸÅÿßÿ° ÿßŸÑÿ∞ÿßÿ™Ÿä.",
        "projects.gjobs.title": "G-Jobs",
        "projects.gjobs.description": "ÿ£ŸÅÿ∂ŸÑ ŸÖŸÜÿµÿ© ÿ™Ÿàÿ∏ŸäŸÅ ŸÅŸä ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±.",
        "projects.gjobs.details": "ŸÖŸÜÿµÿ© ÿ™Ÿàÿ∏ŸäŸÅ ÿ∞ŸÉŸäÿ© ÿ™ÿ±ÿ®ÿ∑ ÿ®ŸäŸÜ ÿßŸÑÿ®ÿßÿ≠ÿ´ŸäŸÜ ÿπŸÜ ÿπŸÖŸÑ Ÿàÿ£ÿ±ÿ®ÿßÿ® ÿßŸÑÿπŸÖŸÑ ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±ŸäŸäŸÜÿå Ÿàÿ™ŸàŸÅÿ± ŸÅŸÑÿßÿ™ÿ± ŸÖÿ™ŸÇÿØŸÖÿ© Ÿàÿ±ÿ≥ÿßÿ¶ŸÑ Ÿàÿ£ÿØŸàÿßÿ™ ÿ™ÿ™ÿ®ÿπ.",
        "projects.searchengine.title": "ŸÖÿ≠ÿ±ŸÉ ÿ®ÿ≠ÿ´ ŸÖÿ™ŸÇÿØŸÖ",
        "projects.searchengine.description": "ÿ™ÿ≠ÿ≥ŸäŸÜ ÿßÿ≥ÿ™ÿ±ÿ¨ÿßÿπ ÿßŸÑŸÜÿµŸàÿµ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ TF-IDF ŸàBM25.",
        "projects.searchengine.details": "ŸÖÿ≠ÿ±ŸÉ ÿ®ÿ≠ÿ´ ŸÖÿ∑Ÿàÿ± ÿ®ŸÑÿ∫ÿ© Java Ÿäÿ≥ÿ™ÿÆÿØŸÖ ŸÜŸÖÿßÿ∞ÿ¨ TF-IDF ŸàBM25 ŸÑŸÖÿπÿßŸÑÿ¨ÿ© Ÿàÿ™ÿ±ÿ™Ÿäÿ® ÿßŸÑŸàÿ´ÿßÿ¶ŸÇ ÿßŸÑŸÜÿµŸäÿ© ÿ®ŸÉŸÅÿßÿ°ÿ©.",
        "projects.restaurant.title": "ÿ≥ŸÑÿ≥ŸÑÿ© ŸÖÿ∑ÿßÿπŸÖ",
        "projects.restaurant.description": "ŸÜÿ∏ÿßŸÖ ÿ•ÿØÿßÿ±ÿ© ŸÑŸÑŸÖÿ∑ÿßÿπŸÖ ŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÅÿ±Ÿàÿπ.",
        "projects.restaurant.details": "ŸÜÿ∏ÿßŸÖ ÿ•ÿØÿßÿ±Ÿä ŸÑÿ≥ŸÑÿ≥ŸÑÿ© ŸÖÿ∑ÿßÿπŸÖ ÿπÿ®ÿ± ÿØŸàŸÑ ŸÖÿ™ÿπÿØÿØÿ©ÿå Ÿäÿ¥ŸÖŸÑ ÿ•ÿØÿßÿ±ÿ© ÿßŸÑŸàŸÇÿ™ ŸàÿßŸÑŸÖŸÉÿßŸÜ.",
        "projects.supermarket.title": "ÿ≥Ÿàÿ®ÿ±ŸÖÿßÿ±ŸÉÿ™ ÿ±ŸÇŸÖŸä",
        "projects.supermarket.description": "ŸÜÿ∏ÿßŸÖ ÿ∞ŸÉŸä ŸÑÿ•ÿØÿßÿ±ÿ© ÿßŸÑÿ≥Ÿàÿ®ÿ±ŸÖÿßÿ±ŸÉÿ™.",
        "projects.supermarket.details": "ÿ™ÿ∑ÿ®ŸäŸÇ ÿ≥ÿ∑ÿ± ÿ£ŸàÿßŸÖÿ± ŸÑÿ•ÿØÿßÿ±ÿ© ÿßŸÑÿ≥Ÿàÿ®ÿ±ŸÖÿßÿ±ŸÉÿ™ Ÿäÿ¥ŸÖŸÑ ÿßŸÑŸÖŸàÿ±ÿØŸäŸÜ ŸàÿßŸÑŸÖÿÆÿ≤ŸàŸÜ ŸàÿßŸÑŸÖÿ®Ÿäÿπÿßÿ™ ŸàÿßŸÑÿ™ŸÇÿßÿ±Ÿäÿ±.",
        "projects.roadmap.title": "ÿ™ÿ≠ŸÑŸäŸÑ ÿ¥ÿ®ŸÉÿ© ÿßŸÑÿ∑ÿ±ŸÇ",
        "projects.roadmap.description": "ÿÆŸàÿßÿ±ÿ≤ŸÖŸäÿßÿ™ ŸÖÿ™ŸÇÿØŸÖÿ© Ÿàÿ™ÿ≠ŸÑŸäŸÑ ÿ®ŸäÿßŸÜŸä.",
        "projects.roadmap.details": "ŸÖÿ¥ÿ±Ÿàÿπ ŸÑÿ™ÿ≠ŸÑŸäŸÑ ÿ¥ÿ®ŸÉÿßÿ™ ÿßŸÑÿ∑ÿ±ŸÇ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿ±ÿ≥ŸàŸÖ ÿßŸÑÿ®ŸäÿßŸÜŸäÿ©ÿå Ÿäÿ™ÿ∂ŸÖŸÜ ÿ≠ÿ≥ÿßÿ® ÿ£ŸÇÿµÿ± ÿßŸÑÿ∑ÿ±ŸÇ ŸàÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑÿßÿ™ÿµÿßŸÑ Ÿàÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿ¥ÿ®ŸÉÿßÿ™.",
        "projects.p0.title": "ŸÖŸàŸÑÿØ ŸÖŸàÿßŸÇÿπ ÿßŸÑŸàŸäÿ® ÿ®ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä",
        "projects.p0.short": "ÿ•ŸÜÿ¥ÿßÿ° ŸÖŸàÿßŸÇÿπ ŸàŸäÿ® ŸÖŸÜ ÿ™Ÿàÿ¨ŸäŸáÿßÿ™ ŸÜÿµŸäÿ©.",
        "projects.p0.desc": "ÿ•ŸÜÿ¥ÿßÿ° ŸÜÿ∏ÿßŸÖ ŸäŸàŸÑÿØ ŸÖŸàÿßŸÇÿπ ŸàŸäÿ® ŸÅÿπÿßŸÑÿ© ŸÖŸÜ ÿ™ÿπŸÑŸäŸÖÿßÿ™ ÿ®ŸÑÿ∫ÿ© ÿ∑ÿ®ŸäÿπŸäÿ© ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÜŸÖÿßÿ∞ÿ¨ LLM. ÿßŸÑÿ™ŸÇŸÜŸäÿßÿ™: Pythonÿå OpenAI APIÿå ÿ£ÿ™ŸÖÿ™ÿ© ÿßŸÑŸàŸäÿ®.",

        "projects.p1.title": "ÿ™ÿÆÿµŸäÿµ ÿßŸÑŸÖŸÜÿ™ÿ¨ÿßÿ™ ÿ®ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä",
        "projects.p1.short": "ÿ≠ŸàŸÑ ÿ£ŸÅŸÉÿßÿ±ŸÉ ÿ•ŸÑŸâ ŸÖŸÜÿ™ÿ¨ÿßÿ™ ŸÖÿÆÿµÿµÿ©.",
        "projects.p1.desc": "ŸÜÿ∏ÿßŸÖ ŸäŸÖŸÉŸÜ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ŸÖŸÜ ÿ™ÿ≠ŸàŸäŸÑ ÿ£ŸÅŸÉÿßÿ±ŸáŸÖ ÿ•ŸÑŸâ ŸÖŸÜÿ™ÿ¨ÿßÿ™ ŸÖÿÆÿµÿµÿ© ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ŸÜŸÖÿßÿ∞ÿ¨ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸäÿå ŸÖÿπ ÿßŸÜÿ™ŸÇÿßŸÑ ÿ≥ŸÑÿ≥ ÿ•ŸÑŸâ ÿßŸÑÿ•ŸÜÿ™ÿßÿ¨.",

        "projects.p2.title": "News Wave",
        "projects.p2.short": "ÿ£ÿÆÿ®ÿßÿ±ŸÉ ÿßŸÑÿ¥ÿÆÿµŸäÿ© ÿßŸÑŸÖÿØÿπŸàŸÖÿ© ÿ®ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä.",
        "projects.p2.desc": "ŸÖŸèÿ¨ŸÖŸêŸëÿπ ÿ£ÿÆÿ®ÿßÿ± ŸÖÿÆÿµÿµ ÿ®ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä ŸäŸàŸÅÿ± ÿ™ÿ≠ÿØŸäÿ´ÿßÿ™ ŸÅŸä ÿßŸÑŸàŸÇÿ™ ÿßŸÑŸÅÿπŸäŸÑ ŸÖŸÜ ÿ£ŸáŸÖ ÿßŸÑŸÖÿµÿßÿØÿ± ÿßŸÑÿπÿßŸÑŸÖŸäÿ©ÿå ŸÖÿµŸÅÿßÿ© ÿ≠ÿ≥ÿ® ÿßŸáÿ™ŸÖÿßŸÖÿßÿ™ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ.",

        "projects.p3.title": "ÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿÆÿ∑ÿ© ÿßŸÑÿ≤ÿ±ÿßÿπŸäÿ©",
        "projects.p3.short": "ÿ≤ÿ±ÿßÿπÿ© ŸÖÿ≥ÿ™ÿØÿßŸÖÿ© ŸÇÿßÿ¶ŸÖÿ© ÿπŸÑŸâ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä.",
        "projects.p3.desc": "ŸÖÿ¥ÿ±Ÿàÿπ ÿ∞ŸÉÿßÿ° ÿßÿµÿ∑ŸÜÿßÿπŸä ŸÑÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿ•ŸÜÿ™ÿßÿ¨ ÿßŸÑÿ≤ÿ±ÿßÿπŸä ŸÅŸä ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ± ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿÆŸàÿßÿ±ÿ≤ŸÖŸäÿßÿ™ ÿßŸÑÿ®ÿ≠ÿ´ ŸÅŸä ÿßŸÑÿ±ÿ≥ŸàŸÖ ÿßŸÑÿ®ŸäÿßŸÜŸäÿ© Ÿàÿ•ÿ±ÿ∂ÿßÿ° ÿßŸÑŸÇŸäŸàÿØ.",

        "projects.p4.title": "G-Jobs",
        "projects.p4.short": "ŸÖŸÜÿµÿ© ÿ™Ÿàÿ∏ŸäŸÅ ÿ∞ŸÉŸäÿ© ŸÅŸä ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±.",
        "projects.p4.desc": "ŸÖŸÜÿµÿ© ÿ∞ŸÉŸäÿ© ÿ™ÿ±ÿ®ÿ∑ ÿßŸÑÿ®ÿßÿ≠ÿ´ŸäŸÜ ÿπŸÜ ÿπŸÖŸÑ ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±ŸäŸäŸÜ ÿ®ÿ£ÿµÿ≠ÿßÿ® ÿßŸÑÿπŸÖŸÑ ŸÖŸÜ ÿÆŸÑÿßŸÑ ŸÅŸÑÿßÿ™ÿ± ŸÖÿ™ŸÇÿØŸÖÿ© ŸàÿßŸÑŸÖÿ±ÿßÿ≥ŸÑÿ© Ÿàÿ£ÿØŸàÿßÿ™ ÿ™ÿ™ÿ®ÿπ ÿßŸÑŸàÿ∏ÿßÿ¶ŸÅ.",

        "projects.p5.title": "ŸÖÿ≠ÿ±ŸÉ ÿ®ÿ≠ÿ´ ŸÖÿ™ŸÇÿØŸÖ",
        "projects.p5.short": "ÿ®ÿ≠ÿ´ ŸÜÿµŸä ŸÖÿπ TF-IDF & BM25.",
        "projects.p5.desc": "ŸÖÿ≠ÿ±ŸÉ ÿ®ÿ≠ÿ´ ŸÇÿßÿ¶ŸÖ ÿπŸÑŸâ Java Ÿäÿ≥ÿ™ÿÆÿØŸÖ TF-IDF Ÿà BM25 ŸÑŸÅŸáÿ±ÿ≥ÿ© Ÿàÿ™ÿ≠ŸÑŸäŸÑ Ÿàÿ™ÿ±ÿ™Ÿäÿ® ÿßŸÑŸÖÿ≥ÿ™ŸÜÿØÿßÿ™ ÿßŸÑŸÜÿµŸäÿ© ÿ®ÿØŸÇÿ©.",

        "projects.p6.title": "ÿ≥ŸÑÿ≥ŸÑÿ© ŸÖÿ∑ÿßÿπŸÖ",
        "projects.p6.short": "ÿ•ÿØÿßÿ±ÿ© ŸÖÿ∑ÿßÿπŸÖ ŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑŸÖŸàÿßŸÇÿπ.",
        "projects.p6.desc": "ŸÜÿ∏ÿßŸÖ ÿ•ÿØÿßÿ±ÿ© ŸÑÿ≥ŸÑÿ≥ŸÑÿ© ŸÖÿ∑ÿßÿπŸÖ ŸÖÿ™ÿπÿØÿØÿ© ÿßŸÑÿ®ŸÑÿØÿßŸÜÿå Ÿäÿ™Ÿäÿ≠ ÿßŸÑÿ≠ÿ¨ÿ≤ ÿßŸÑŸÖŸÜÿ∏ŸÖ ŸàÿßŸÑŸÖÿÆÿ≤ŸàŸÜ ŸàÿßŸÑÿ™ÿ≠ŸÉŸÖ ŸÅŸä ÿßŸÑŸÖŸàÿ∏ŸÅŸäŸÜ.",

        "projects.p7.title": "ÿ≥Ÿàÿ®ÿ±ŸÖÿßÿ±ŸÉÿ™ ÿßŸÑÿ•ŸÜÿ™ÿ±ŸÜÿ™ ÿßŸÑÿÆÿßÿµ ÿ®Ÿä",
        "projects.p7.short": "ŸÜÿ∏ÿßŸÖ ÿ≥Ÿàÿ®ÿ±ŸÖÿßÿ±ŸÉÿ™ ÿ∞ŸÉŸä ŸÇÿßÿ¶ŸÖ ÿπŸÑŸâ CLI.",
        "projects.p7.desc": "ÿ™ÿ∑ÿ®ŸäŸÇ ÿ≥ÿ∑ÿ± ÿ£ŸàÿßŸÖÿ± ŸÑÿ±ŸÇŸÖŸÜÿ© ÿ•ÿØÿßÿ±ÿ© ÿßŸÑÿ≥Ÿàÿ®ÿ±ŸÖÿßÿ±ŸÉÿ™: ÿßŸÑŸÖŸàÿ±ÿØŸäŸÜÿå ÿßŸÑŸÖÿÆÿ≤ŸàŸÜÿå ÿßŸÑŸÖÿ®Ÿäÿπÿßÿ™ÿå ÿßŸÑÿ™ŸÇÿßÿ±Ÿäÿ± ŸàÿßŸÑÿ•ÿ≠ÿµÿßÿ¶Ÿäÿßÿ™.",

        "projects.p8.title": "ÿ™ÿ≠ŸÑŸäŸÑ ÿ¥ÿ®ŸÉÿ© ÿßŸÑÿ∑ÿ±ŸÇ (MAP)",
        "projects.p8.short": "ÿÆŸàÿßÿ±ÿ≤ŸÖŸäÿßÿ™ ÿßŸÑÿ±ÿ≥ŸàŸÖ ÿßŸÑÿ®ŸäÿßŸÜŸäÿ© ÿßŸÑŸÖÿ™ŸÇÿØŸÖÿ©.",
        "projects.p8.desc": "ÿ™ÿ≠ŸÑŸäŸÑ ÿ¥ÿ®ŸÉÿ© ÿßŸÑÿ∑ÿ±ŸÇ ÿßŸÑŸÇÿßÿ¶ŸÖ ÿπŸÑŸâ ÿßŸÑÿ±ÿ≥ŸàŸÖ ÿßŸÑÿ®ŸäÿßŸÜŸäÿ© ŸÅŸä ÿ£ŸÅŸäŸÜŸäŸàŸÜ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿÆŸàÿßÿ±ÿ≤ŸÖŸäÿßÿ™ ŸÑÿ£ŸÇÿµÿ± ÿßŸÑŸÖÿ≥ÿßÿ±ÿßÿ™ ŸàÿßŸÑÿßÿ™ÿµÿßŸÑ ŸàÿßŸÑÿ£ÿØÿßÿ°.",

        "projects.p9.title": "ŸÖÿØÿ±ÿ® LeRobot PushT",
        "projects.p9.short": "ÿ™ÿØÿ±Ÿäÿ®/ÿ™ŸÇŸäŸäŸÖ ÿ≥Ÿäÿßÿ≥ÿßÿ™ PushT.",
        "projects.p9.desc": "ÿ™ÿ∑ÿ®ŸäŸÇ ŸàŸäÿ® ŸÑÿ™ÿØÿ±Ÿäÿ® Ÿàÿ™ŸÇŸäŸäŸÖ ÿ≥Ÿäÿßÿ≥ÿßÿ™ PushT. ŸäÿØÿπŸÖ ŸÜŸÇÿßÿ∑ ÿßŸÑÿ™ŸÅÿ™Ÿäÿ¥ ŸàÿßŸÑŸÜÿ¥ÿ± ÿπŸÑŸâ Hugging Face. ÿßŸÑÿ™ŸÇŸÜŸäÿßÿ™: Pythonÿå LeRobotÿå Gradioÿå CUDA.",

        "projects.p10.title": "ŸÖÿ≠ÿßŸÉŸä ÿ±ÿ§Ÿäÿ© ÿßŸÑÿ±Ÿàÿ®Ÿàÿ™",
        "projects.p10.short": "ŸÖÿ≠ÿßŸÉŸä ÿ™ŸÅÿßÿπŸÑŸä ŸÑÿ±ÿ§Ÿäÿ© ÿßŸÑÿ±Ÿàÿ®Ÿàÿ™.",
        "projects.p10.desc": "ŸÖÿ≠ÿßŸÉŸä ŸÖÿ™ÿµŸÅÿ≠: ÿ™ŸÜŸÇŸÑ ÿπŸÑŸâ ÿ¥ÿ®ŸÉÿ©ÿå ÿßŸÑÿ™ŸÇÿßÿ∑/Ÿàÿ∂ÿπ ŸàÿßŸÑÿ£ŸàÿßŸÖÿ± ÿ®ŸÑÿ∫ÿ© ÿ∑ÿ®ŸäÿπŸäÿ©. ÿ±ÿ§Ÿäÿ© COCO‚ÄëSSDÿå ÿÆŸàÿßÿ±ÿ≤ŸÖŸäÿ© A* ŸÑŸÑŸÖÿ≥ÿßÿ±. ÿßŸÑÿ™ŸÇŸÜŸäÿßÿ™: JS/Canvasÿå TF.js.",

        // Add missing Arabic translations for profile section
        "profile.greeting": "ŸÖÿ±ÿ≠ÿ®ÿßŸãÿå ÿ£ŸÜÿß ŸÖŸÅÿ™ÿßÿ≠ ÿ≤ŸäŸÜÿ®.",
        "profile.text1": "ÿ∑ÿßŸÑÿ®ÿ© ÿπŸÑŸàŸÖ ÿßŸÑÿ≠ÿßÿ≥Ÿàÿ® ÿ¥ÿ∫ŸàŸÅÿ© ÿ®ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä ÿßŸÑŸÖÿ∑ÿ®ŸÇ ÿπŸÑŸâ ÿßŸÑÿ±Ÿàÿ®Ÿàÿ™ÿßÿ™ Ÿàÿ™ÿ∑ŸàŸäÿ± ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑÿÆŸÑŸÅŸäÿ©ÿå ÿ£ŸÇŸàŸÖ ÿ®ÿ™ÿµŸÖŸäŸÖ ÿ£ŸÜÿ∏ŸÖÿ© ÿ∞ŸÉŸäÿ© ÿ™ÿ¨ŸÖÿπ ÿ®ŸäŸÜ ŸÜŸÖÿßÿ∞ÿ¨ ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑŸÉÿ®Ÿäÿ±ÿ© ŸàÿßŸÑÿ™ÿπŸÑŸÖ ÿßŸÑÿπŸÖŸäŸÇ Ÿàÿ£ÿ™ŸÖÿ™ÿ© ÿßŸÑŸàŸäÿ®.",
        "profile.text2": "ÿ™ŸÜŸÅÿ∞ ŸÖÿ¥ÿßÿ±ŸäÿπŸä ŸÜŸÖÿßÿ∞ÿ¨ OpenAIÿå ŸàŸÖÿ≠ÿßŸÉŸäÿßÿ™ ÿ™ŸÅÿßÿπŸÑŸäÿ©ÿå Ÿàÿ≠ŸÑŸàŸÑ ÿ¥ÿßŸÖŸÑÿ© ŸÖŸÜ ÿßŸÑÿ®ÿØÿßŸäÿ© ÿ•ŸÑŸâ ÿßŸÑŸÜŸáÿßŸäÿ©.",
        "profile.more": "ÿ™ÿπÿ±ŸÅ ÿ£ŸÉÿ´ÿ± ÿπŸÑŸâ ŸÖÿ≥Ÿäÿ±ÿ™Ÿä",

        // Add missing Arabic translations for certificates section
        "certs.heading": "ÿßŸÑÿ¥ŸáÿßÿØÿßÿ™",
        "certs.pytorch.title": "ŸÖŸÇÿØŸÖÿ© ŸÅŸä ÿßŸÑÿ™ÿπŸÑŸÖ ÿßŸÑÿπŸÖŸäŸÇ ŸÖÿπ PyTorch - DataCamp",
        "certs.pytorch.desc": "ÿ™ÿØÿ±Ÿäÿ® ÿπÿ®ÿ± ÿßŸÑÿ•ŸÜÿ™ÿ±ŸÜÿ™ ÿ≠ŸàŸÑ ÿßŸÑÿ¥ÿ®ŸÉÿßÿ™ ÿßŸÑÿπÿµÿ®Ÿäÿ© Ÿàÿßÿ≥ÿ™ÿÆÿØÿßŸÖ PyTorch.",
        "certs.aylp.title": "ÿ®ÿ±ŸÜÿßŸÖÿ¨ ÿßŸÑŸÇŸäÿßÿØÿ© ÿßŸÑÿ¥ÿ®ÿßÿ®Ÿäÿ© ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±Ÿä - ŸÖÿ±ŸÉÿ≤ ÿ¥ŸÖÿßŸÑ ŸÜŸäŸÅÿßÿØÿß ÿßŸÑÿØŸàŸÑŸä",
        "certs.aylp.desc": "ÿ®ÿ±ŸÜÿßŸÖÿ¨ ÿ™ÿ®ÿßÿØŸÑ Ÿäÿ±ŸÉÿ≤ ÿπŸÑŸâ ÿßŸÑŸÇŸäÿßÿØÿ© ŸàÿßŸÑÿßÿ®ÿ™ŸÉÿßÿ± ŸàÿßŸÑÿ™ÿπÿßŸàŸÜ ÿ®ŸäŸÜ ÿßŸÑÿ´ŸÇÿßŸÅÿßÿ™.",
        "certs.eplus.title": "ŸÖÿ≥ÿ™ŸàŸâ ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿ•ŸÜÿ¨ŸÑŸäÿ≤Ÿäÿ© - ŸÖÿ±ŸÉÿ≤ E-Plus",
        "certs.eplus.desc": "ÿ¥ŸáÿßÿØÿ© ŸÉŸÅÿßÿ°ÿ© ŸÅŸä ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿ•ŸÜÿ¨ŸÑŸäÿ≤Ÿäÿ©.",
        "certs.fcc.title": "ÿ¥ŸáÿßÿØÿ© ÿ™ÿµŸÖŸäŸÖ ÿßŸÑŸàŸäÿ® ÿßŸÑŸÖÿ™ÿ¨ÿßŸàÿ® - freeCodeCamp",
        "certs.fcc.desc": "ÿ¥ŸáÿßÿØÿ© ÿ™ÿ±ŸÉÿ≤ ÿπŸÑŸâ ÿ£ÿ≥ÿßÿ≥Ÿäÿßÿ™ HTML Ÿà CSS Ÿà Flexbox ŸàÿßŸÑÿ™ÿµŸÖŸäŸÖ ÿßŸÑŸÖÿ™ÿ¨ÿßŸàÿ®.",
        "certs.cta": "ÿπÿ±ÿ∂ ÿßŸÑÿ¥ŸáÿßÿØÿ©",
  // Project links & hover
  "projects.hover": "ŸÖÿ±Ÿëÿ± ÿ£Ÿà ÿßŸÜŸÇÿ± ŸÑÿπÿ±ÿ∂ ÿßŸÑÿ™ŸÅÿßÿµŸäŸÑ",
  "projects.link": "ÿπÿ±ÿ∂ ÿßŸÑŸÉŸàÿØ ÿπŸÑŸâ GitHub",
  "projects.link.instagram": "ÿπÿ±ÿ∂ ÿßŸÑÿµŸÅÿ≠ÿ© ÿπŸÑŸâ ÿ•ŸÜÿ≥ÿ™ÿ∫ÿ±ÿßŸÖ",
  "projects.link.demo": "ÿπÿ±ÿ∂ ÿßŸÑÿπÿ±ÿ∂ ÿßŸÑÿ™Ÿàÿ∂Ÿäÿ≠Ÿä",
  "projects.link.modelRepo": "ŸÖÿ≥ÿ™ŸàÿØÿπ ÿßŸÑŸÜŸÖŸàÿ∞ÿ¨",
  "projects.link.demoSpace": "ŸÖÿ≥ÿßÿ≠ÿ© ÿßŸÑÿπÿ±ÿ∂",
  "projects.link.githubRepo": "ŸÖÿ≥ÿ™ŸàÿØÿπ GitHub",
  "projects.link.liveDemo": "ÿπÿ±ÿ∂ ŸÖÿ®ÿßÿ¥ÿ±",

  // Experience & leadership (complete set)
  "experience.heading": "ÿßŸÑÿÆÿ®ÿ±ÿ© ŸàÿßŸÑŸÇŸäÿßÿØÿ©",
  "experience.card1.title": "ŸÖÿ≥ÿ§ŸàŸÑÿ© ÿ™ŸÇŸÜŸäÿ© ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™",
  "experience.card1.detail": "ŸÜÿßÿØŸä ŸÖÿ∑Ÿàÿ±Ÿä Google ‚Äì ENSIA (2023‚Äì2024)",
  "experience.card2.title": "ŸÖÿ¥ÿßÿ±ŸÉÿ© ŸÅŸä AYLP",
  "experience.card2.detail": "ÿßŸÑŸÖÿ±ŸÉÿ≤ ÿßŸÑÿØŸàŸÑŸä ŸÑÿ¥ŸÖÿßŸÑ ŸÜŸäŸÅÿßÿØÿß (2021) ‚Äì ÿ®ÿ±ŸÜÿßŸÖÿ¨ ÿßŸÑŸÇŸäÿßÿØÿ© ŸÑŸÑÿ¥ÿ®ÿßÿ® ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±Ÿä",
  "experience.card2.cert": "ÿπÿ±ÿ∂ ÿßŸÑÿ¥ŸáÿßÿØÿ©",
  "experience.card3.title": "ŸÖŸÜÿ∏ŸëŸêŸÖÿ© ŸÅÿπÿßŸÑŸäÿßÿ™",
  "experience.card3.detail": "ŸáÿßŸÉÿßÿ´ŸàŸÜÿßÿ™ÿå ÿ∞ŸÉÿßÿ° ÿßÿµÿ∑ŸÜÿßÿπŸäÿå ÿ™ÿ∑ŸàŸäÿ± ÿßŸÑŸàŸäÿ®",
  "experience.card4.title": "ÿ•ŸÜÿ¨ÿßÿ≤ÿßÿ™ ÿ£ÿÆÿ±Ÿâ",
  "experience.card4.detail": "ÿßŸÑŸÖÿ¥ÿßÿ±ŸÉÿ© ŸÅŸä ÿπÿØÿ© ŸáÿßŸÉÿßÿ´ŸàŸÜÿßÿ™ ŸàŸÖÿ¥ÿßÿ±Ÿäÿπ ÿ™ÿπÿßŸàŸÜŸäÿ© ŸÑŸÑÿßÿ®ÿ™ŸÉÿßÿ± ŸàÿßŸÑÿ™ŸÖŸäÿ≤.",
  "experience.card4.item1": "ŸáÿßŸÉÿßÿ´ŸàŸÜ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä ÿ£ŸÅŸäŸÜŸäŸàŸÜ (24 ÿ≥ÿßÿπÿ©ÿå 2024)",
  "experience.card4.item2": "ŸÖŸèÿ±ÿ¥ŸêÿØÿ© ŸÖÿ®ÿ™ÿØÿ¶ÿ© ‚Äì GDSC (2023)",
  "experience.card4.item3": "ŸÖÿ¥ÿ±Ÿàÿπ ŸÖÿ§ÿ∑ŸëŸéÿ± G-JOBS (2024): ŸÖŸáÿßŸÖÿå Gitÿå ŸÖÿ±ÿßÿ¨ÿπÿ©",

  // Languages section
  "langues.heading": "ÿßŸÑŸÑÿ∫ÿßÿ™",
  "langues.french": "ÿßŸÑŸÅÿ±ŸÜÿ≥Ÿäÿ©",
  "langues.frenchlevel": "ŸÖÿ™Ÿàÿ≥ÿ∑ (B2)",
  "langues.frenchCert": "ÿπÿ±ÿ∂ ÿßŸÑÿ¥ŸáÿßÿØÿ©",
  "langues.english": "ÿßŸÑÿ•ŸÜÿ¨ŸÑŸäÿ≤Ÿäÿ©",
  "langues.englishlevel": "ÿ∑ŸÑÿßŸÇÿ©",
  "langues.englishCert": "ÿπÿ±ÿ∂ ÿßŸÑÿ¥ŸáÿßÿØÿ©",
  "langues.arabic": "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©",
  "langues.arabicLevel": "ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿ£ŸÖ",

  // Competences (summary titles + common items)
  "competences.heading": "ÿßŸÑŸÖŸáÿßÿ±ÿßÿ™",
  "competences.techSkills": "ÿßŸÑŸÖŸáÿßÿ±ÿßÿ™ ÿßŸÑÿ™ŸÇŸÜŸäÿ©",
  "competences.aiDataSkills": "ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä ŸàÿπŸÑŸàŸÖ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
  "competences.softSkillsTitle": "ÿßŸÑŸÖŸáÿßÿ±ÿßÿ™ ÿßŸÑÿ¥ÿÆÿµŸäÿ©",
  "competences.artificialIntelligence": "ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä",
  "competences.dataScience": "ÿπŸÑŸàŸÖ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
  "competences.programming": "ÿßŸÑÿ®ÿ±ŸÖÿ¨ÿ©",
  "competences.web": "ÿ™ÿ∑ŸàŸäÿ± ÿßŸÑŸàŸäÿ®",
  "competences.languages": "ÿßŸÑŸÑÿ∫ÿßÿ™",
  "competences.paradigms": "ÿßŸÑÿ£ŸÜŸÖÿßÿ∑",
  "competences.frontend": "ÿßŸÑŸàÿßÿ¨Ÿáÿ© ÿßŸÑÿ£ŸÖÿßŸÖŸäÿ©",
  "competences.backend": "ÿßŸÑŸàÿßÿ¨Ÿáÿ© ÿßŸÑÿÆŸÑŸÅŸäÿ©",
  "competences.databases": "ŸÇŸàÿßÿπÿØ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™",
  "competences.tools": "ÿßŸÑÿ£ÿØŸàÿßÿ™",
  "competences.aiModels": "ÿßŸÑŸÜŸÖÿßÿ∞ÿ¨ ŸàÿßŸÑÿ™ŸÇŸÜŸäÿßÿ™",
  "competences.aiTools": "ÿ£ÿØŸàÿßÿ™ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä",
  "competences.dataAnalysis": "ÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ ŸàÿßŸÑŸÖÿπÿßŸÑÿ¨ÿ©",
  "competences.dataProjects": "ŸÖÿ¥ÿßÿ±Ÿäÿπ ÿ®ÿßÿ±ÿ≤ÿ©",
  "competences.project1": "ÿ™ŸàŸÑŸäÿØ ÿ®ŸäÿßŸÜÿßÿ™ ÿ™ÿ±ŸÉŸäÿ®Ÿäÿ© ŸÑŸÑÿ™ÿØÿ±Ÿäÿ® ÿßŸÑÿØŸÇŸäŸÇ",
  "competences.project2": "ŸÖÿ≠ÿ±ŸÉ ÿ®ÿ≠ÿ´ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ TF-IDF ŸàBM25",
  "competences.teamwork": "ÿßŸÑÿπŸÖŸÑ ÿßŸÑÿ¨ŸÖÿßÿπŸä",
  "competences.leadership": "ÿßŸÑŸÇŸäÿßÿØÿ©",
  "competences.problemSolving": "ÿ≠ŸÑ ÿßŸÑŸÖÿ¥ŸÉŸÑÿßÿ™",
  "competences.continuousLearning": "ÿßŸÑÿ™ÿπŸÑŸëŸÖ ÿßŸÑŸÖÿ≥ÿ™ŸÖÿ±",
  "competences.teamworkDesc": "ÿ™ÿπÿßŸàŸÜ ŸÅÿπŸëÿßŸÑÿå ÿ™ŸàÿßÿµŸÑ Ÿàÿßÿ∂ÿ≠ÿå ÿ±Ÿàÿ≠ ÿßŸÑŸÅÿ±ŸäŸÇ",
  "competences.leadershipDesc": "ÿÆÿ®ÿ±ÿ© GDSCÿå ÿ•ÿ±ÿ¥ÿßÿØÿå ÿ•ÿØÿßÿ±ÿ© ŸÖÿ¥ÿßÿ±Ÿäÿπ ÿ™ÿπÿßŸàŸÜŸäÿ©",
  "competences.problemSolvingDesc": "ÿ™ŸÅŸÉŸäÿ± ÿ™ÿ≠ŸÑŸäŸÑŸäÿå ŸÜŸáÿ¨ ŸÖŸÜŸáÿ¨Ÿäÿå ÿ≠ŸÑŸàŸÑ ŸÖÿ®ÿ™ŸÉÿ±ÿ©",
  "competences.continuousLearningDesc": "ŸÖÿ™ÿßÿ®ÿπÿ© ÿ™ŸÇŸÜŸäÿ©ÿå ÿ™ŸÉŸäŸëŸÅ ÿ≥ÿ±Ÿäÿπÿå ÿ™ÿπŸÑŸëŸÖ ÿ∞ÿßÿ™Ÿä",

  // Detailed skill lines (match your UI text)
  "competences.web.frontend": "ÿßŸÑŸàÿßÿ¨Ÿáÿ© ÿßŸÑÿ£ŸÖÿßŸÖŸäÿ©: HTMLÿå CSSÿå JavaScriptÿå Bootstrapÿå AJAXÿå TensorFlow.jsÿå HTML5 Canvas",
  "competences.web.backend": "ÿßŸÑŸàÿßÿ¨Ÿáÿ© ÿßŸÑÿÆŸÑŸÅŸäÿ©: Node.jsÿå PHPÿå Python (Flaskÿå Django)ÿå REST APIÿå SQL",
  "competences.web.fullstack": "ŸÉÿßŸÖŸÑ ÿßŸÑŸÖŸÉÿØÿ≥: Laravelÿå Reactÿå Djangoÿå Flask",
  "competences.web.database": "ŸÇŸàÿßÿπÿØ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™: MySQLÿå PostgreSQL",
  "competences.web.security": "ÿ£ŸÖŸÜ ÿßŸÑŸàŸäÿ®: ÿßŸÑÿ¨ŸÑÿ≥ÿßÿ™ÿå ÿßŸÑŸÉŸàŸÉŸäÿ≤ÿå CSRFÿå ÿ•ÿπÿßÿØÿ© ŸÉÿ™ÿßÿ®ÿ© ÿßŸÑÿ±Ÿàÿßÿ®ÿ∑",
  "competences.web.tools": "ÿ£ÿØŸàÿßÿ™ ŸÖÿ±ÿ™ÿ®ÿ∑ÿ©: Gitÿå GitHubÿå GitHub Actionsÿå Makefile",

  "competences.data.tools": "ÿßŸÑŸÑÿ∫ÿßÿ™ ŸàÿßŸÑÿ£ÿØŸàÿßÿ™: Pythonÿå PyTorchÿå OpenAI APIÿå Hugging Faceÿå Scikit-learnÿå Pandas",
  "competences.data.models": "ÿßŸÑŸÜŸÖÿßÿ∞ÿ¨ ŸàÿßŸÑÿ™ŸÇŸÜŸäÿßÿ™: LLMÿå ÿßŸÑÿ∂ÿ®ÿ∑ ÿßŸÑÿØŸÇŸäŸÇÿå ŸÜŸÖÿßÿ∞ÿ¨ ÿßŸÑÿßŸÜÿ™ÿ¥ÿßÿ±ÿå ÿßŸÑÿ™ÿπŸÑŸÖ ÿßŸÑŸÖÿπÿ≤ÿ≤ÿå ÿßŸÑÿ™ÿµŸÜŸäŸÅÿå ÿ™ŸàŸÑŸäÿØ ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ™ÿ±ŸÉŸäÿ®Ÿäÿ©",
  "competences.data.apps": "ÿ™ÿ∑ÿ®ŸäŸÇÿßÿ™ ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä: ÿ±ÿ§Ÿäÿ© ÿ≠ÿßÿ≥Ÿàÿ®Ÿäÿ©ÿå ŸÖÿπÿßŸÑÿ¨ÿ© ŸÑÿ∫ÿ© ÿ∑ÿ®ŸäÿπŸäÿ©ÿå ÿ™ŸàŸÑŸäÿØ ÿßŸÑŸàÿ≥ŸàŸÖÿå ŸÖŸàÿßŸÇÿπ ŸÖÿØÿπŸàŸÖÿ© ÿ®ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸäÿå ÿ™ŸàÿµŸäÿ© ÿ∞ŸÉŸäÿ©",
  "competences.data.projects": "ŸÖÿ¥ÿßÿ±Ÿäÿπ ÿ®ÿßÿ±ÿ≤ÿ©: LeRobotÿå ŸÖŸàŸÑÿØ ŸÖŸàÿßŸÇÿπ ÿ®ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸäÿå News Waveÿå ÿ™ŸàŸÑŸäÿØ ÿ™ŸÑŸÇÿßÿ¶Ÿä ŸÑŸÑŸàÿ≥ŸàŸÖ",
  "competences.data.extra": "ÿ£ÿØŸàÿßÿ™: Jupyterÿå Colabÿå Transformersÿå OpenAI Playgroundÿå TensorBoardÿå NumPyÿå Matplotlib",

  "competences.programming.languages": "ÿßŸÑŸÑÿ∫ÿßÿ™: Pythonÿå C++ÿå Javaÿå PHPÿå JavaScriptÿå Bashÿå SQL",
  "competences.programming.paradigms": "ÿßŸÑÿ£ŸÜŸÖÿßÿ∑: ŸÉÿßÿ¶ŸÜŸäÿ©ÿå Ÿàÿ∏ŸäŸÅŸäÿ©ÿå ŸÖŸÜÿ∑ŸÇ ÿßŸÑÿ£ÿπŸÖÿßŸÑ",
  "competences.programming.experience": "ÿßŸÑÿÆÿ®ÿ±ÿßÿ™: ÿ™ÿ±ÿ¨ŸÖÿ©ÿå ÿÆŸàÿßÿ±ÿ≤ŸÖŸäÿßÿ™ ÿßŸÑÿ±ÿ≥ŸàŸÖ ÿßŸÑÿ®ŸäÿßŸÜŸäÿ© (ÿØŸäŸÉÿ≥ÿ™ÿ±ÿßÿå A*ÿå BM25)ÿå ÿ≥ŸÉÿ±ÿ®ÿ™ÿßÿ™ CLI",
  "competences.programming.projects": "ÿßŸÑŸÖÿ¥ÿßÿ±Ÿäÿπ: ŸÖÿ™ÿ±ÿ¨ŸÖ ÿ¥ÿ®ŸäŸá ÿ®ŸÄ Pascalÿå ÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑÿ¥ÿ®ŸÉÿßÿ™ÿå ŸÖÿ≠ÿ±ŸÉ ÿ®ÿ≠ÿ´ÿå ÿ≥Ÿàÿ®ÿ±ŸÖÿßÿ±ŸÉÿ™ CLIÿå ÿ™ŸàŸÑŸäÿØ ÿßŸÑŸàŸäÿ® ÿπÿ®ÿ± LLM",
  "footer.copy": "¬© 2025 ŸÖŸÅÿ™ÿßÿ≠ ÿ≤ŸäŸÜÿ®. ÿ¨ŸÖŸäÿπ ÿßŸÑÿ≠ŸÇŸàŸÇ ŸÖÿ≠ŸÅŸàÿ∏ÿ©.",
  "formation.bac": "ÿ®ŸÉÿßŸÑŸàÿ±Ÿäÿß ÿπŸÑŸàŸÖ ÿ™ÿ¨ÿ±Ÿäÿ®Ÿäÿ© ‚Äî ÿ´ÿßŸÜŸàŸäÿ© ÿπÿ®ÿØ ÿßŸÑŸÇÿßÿØÿ± ÿßŸÑŸäÿßÿ¨Ÿàÿ±Ÿäÿå ŸÇŸÖÿßÿ± (ÿßŸÑÿ¨ÿ≤ÿßÿ¶ÿ±)",
"formation.bacDiplome": "<strong>ÿßŸÑÿ™ŸÇÿØŸäÿ±:</strong> ŸÖŸÖÿ™ÿßÿ≤ ‚Äî ŸÖÿπÿØŸÑ 17.82 (ÿ¥ÿπÿ®ÿ© ÿπŸÑŸàŸÖ ÿ™ÿ¨ÿ±Ÿäÿ®Ÿäÿ©)",
"formation.bacCert": "ÿπÿ±ÿ∂ ÿ¥ŸáÿßÿØÿ© ÿßŸÑÿ®ŸÉÿßŸÑŸàÿ±Ÿäÿß",
"formation.bacTranscript": "ÿπÿ±ÿ∂ ŸÉÿ¥ŸÅ ÿßŸÑŸÜŸÇÿßÿ∑"
      },
    };
    
    // --- Mobile Menu Functionality ---
    const hamburger = document.querySelector('.hamburger');
    const mobileNav = document.querySelector('.mobile-nav');
    const mobileNavLinks = document.querySelectorAll('.mobile-nav a');
    
    function toggleMobileMenu() {
        if (hamburger && mobileNav) {
            hamburger.classList.toggle('active');
            mobileNav.classList.toggle('active');
            document.body.style.overflow = mobileNav.classList.contains('active') ? 'hidden' : '';
        }
    }
    
    if (hamburger) {
        hamburger.addEventListener('click', toggleMobileMenu);
    }
    
    // Close mobile menu when clicking on a link
    mobileNavLinks.forEach(link => {
        link.addEventListener('click', () => {
            if (hamburger && mobileNav) {
                hamburger.classList.remove('active');
                mobileNav.classList.remove('active');
                document.body.style.overflow = '';
            }
        });
    });
    
    // Close mobile menu when clicking outside
    document.addEventListener('click', (e) => {
        if (mobileNav && mobileNav.classList.contains('active') && 
            !mobileNav.contains(e.target) && 
            hamburger && !hamburger.contains(e.target)) {
            toggleMobileMenu();
        }
    });

    // --- Mobile Language Dropdown ---
    const mobileLangButton = document.querySelector('.mobile-lang-button');
    const mobileLangOptions = document.querySelector('.mobile-lang-options');
    const mobileLangButtons = document.querySelectorAll('.mobile-lang-options button');
    
    if (mobileLangButton && mobileLangOptions) {
        mobileLangButton.addEventListener('click', (e) => {
            e.stopPropagation();
            mobileLangOptions.classList.toggle('active');
        });
        
        // Close dropdown when clicking outside
        document.addEventListener('click', (e) => {
            if (!mobileLangButton.contains(e.target) && !mobileLangOptions.contains(e.target)) {
                mobileLangOptions.classList.remove('active');
            }
        });
    }
    
    mobileLangButtons.forEach(btn => {
        btn.addEventListener('click', () => {
            const selectedLang = btn.getAttribute('data-lang');
            translatePage(selectedLang);
            
            // Update mobile button text
            const langNames = { fr: 'Fran√ßais', en: 'English', ar: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©' };
            if (mobileLangButton) {
                const currentLangSpan = mobileLangButton.querySelector('.current-lang');
                if (currentLangSpan) {
                    currentLangSpan.textContent = langNames[selectedLang] || selectedLang.toUpperCase();
                }
            }
            
            // Close dropdown
            if (mobileLangOptions) {
                mobileLangOptions.classList.remove('active');
            }
        });
    });

    // --- Translation Function ---
    function translatePage(lang) {
      const html = document.documentElement;
      html.setAttribute('lang', lang);
      html.setAttribute('dir', lang === 'ar' ? 'rtl' : 'ltr');

      // --- Reset projects scroller to the visual start ---
      const scrollers = document.querySelectorAll('.projects-scroll');
      scrollers.forEach((el) => {
        const prevBehavior = el.style.scrollBehavior;
        el.style.scrollBehavior = 'auto'; // no animation on jump

        const applyPosition = () => {
          const max = el.scrollWidth - el.clientWidth;
          // LTR => show first card at left edge; RTL => show first card at right edge
          el.scrollLeft = (lang === 'ar') ? max : 0;
          el.style.scrollBehavior = prevBehavior || '';
        };

        // Clear any stale position first
        el.scrollLeft = 0;

        // Double RAF: wait for layout to update after dir change, then measure & set
        requestAnimationFrame(() => {
          requestAnimationFrame(applyPosition);
        });
      });


      const translatableElements = document.querySelectorAll('[data-translate]');
      const dict = translations[lang] || {};
        
        translatableElements.forEach(el => {
            const key = el.getAttribute('data-translate');
            if (dict && dict[key] != null) {
                if (el.hasAttribute('data-translate-html')) {
                    el.innerHTML = dict[key];
                } else if (el.children.length === 0 || el.classList.contains('flip-card-front') || 
                          el.classList.contains('flip-card-back') ||
                          el.classList.contains('language-card') ||
                          el.classList.contains('formation-item') ||
                          el.classList.contains('soft-skill-card') ||
                          el.tagName === 'H3' || el.tagName === 'H4') {
                    el.textContent = dict[key];
                } else if (el.querySelector('p') && !el.querySelector('a')) {
                    el.textContent = dict[key];
                }
            }
        });

        // Special handling for specific sections that have nested content
        // Certificates section
        document.querySelectorAll('[data-translate="certs.heading"]').forEach(el => {
          if (dict["certs.heading"]) {
            el.textContent = dict["certs.heading"];
          }
        });
        
        // Project cards - force update titles and descriptions
        document.querySelectorAll('.flip-card-front h3, .flip-card-back h3').forEach(el => {
          const key = el.getAttribute('data-translate');
          if (key && dict[key]) {
            el.textContent = dict[key];
          }
        });
        
        document.querySelectorAll('.flip-card-front p, .flip-card-back p').forEach(el => {
          const key = el.getAttribute('data-translate');
          if (key && dict[key]) {
            el.textContent = dict[key];
          }
        });
        
        // Experience cards
        document.querySelectorAll('.experience-card h3').forEach(el => {
          const key = el.getAttribute('data-translate');
          if (key && dict[key]) {
            el.textContent = dict[key];
          }
        });
        
        // Experience card details (paragraphs)
        document.querySelectorAll('.experience-details p').forEach(el => {
          const key = el.getAttribute('data-translate');
          if (key && dict[key]) {
            el.textContent = dict[key];
          }
        });
        
        // Experience card highlight list items
        document.querySelectorAll('.xp-highlights li').forEach(el => {
          const key = el.getAttribute('data-translate');
          if (key && dict[key]) {
            el.textContent = dict[key];
          }
        });
        
        // Languages section
        document.querySelectorAll('.language-card h3, .language-card p span').forEach(el => {
          const key = el.getAttribute('data-translate');
          if (key && dict[key]) {
            el.textContent = dict[key];
          }
        });

        // Update <title>
        if (dict["page.title"]) {
          document.title = dict["page.title"];
        }

        // Update pressed state on language buttons (both desktop and mobile)
        document.querySelectorAll('.lang-switcher button[data-lang], .mobile-lang-options button[data-lang]').forEach(b => {
          b.setAttribute('aria-pressed', String(b.getAttribute('data-lang') === lang));
        });

        // Update mobile language button text
        const langNames = { fr: 'Fran√ßais', en: 'English', ar: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©' };
        const mobileLangButton = document.querySelector('.mobile-lang-button .current-lang');
        if (mobileLangButton) {
            mobileLangButton.textContent = langNames[lang] || lang.toUpperCase();
        }

        // Persist selection
        try { localStorage.setItem('lang', lang); } catch {}
    }
  
    // --- Initialize translations on page load (restore saved or default to French) ---
    const savedLang = (() => {
      try { return localStorage.getItem('lang'); } catch { return null; }
    })();
    translatePage(savedLang || "fr");
  
    // --- Language Switcher (Desktop) ---
    const langButtons = document.querySelectorAll(".lang-switcher button");
    langButtons.forEach(btn => {
      btn.addEventListener("click", (e) => {
        e.stopPropagation(); // avoid the outside-click closer interfering
        const selectedLang = btn.getAttribute("data-lang");
        translatePage(selectedLang);

        // Close the desktop dropdown
        if (langSwitcher) {
          langSwitcher.classList.remove("open");
        }
      });
    });
  
    const sections = document.querySelectorAll(".section");
    const observerOptions = { threshold: 0.2 };
    const sectionObserver = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add("in-view");
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    sections.forEach(section => {
      sectionObserver.observe(section);
    });
  
    const scrollIndicator = document.getElementById("scrollIndicator");
    if (scrollIndicator) {
      scrollIndicator.addEventListener("click", () => {
        const firstSection = document.querySelector("main section");
        if (firstSection) {
          window.scrollTo({
            top: firstSection.offsetTop - 60,
            behavior: "smooth"
          });
        }
      });
    }
  
    const themeToggle = document.getElementById("themeToggle");
    if (themeToggle) {
      themeToggle.addEventListener("click", () => {
        document.body.classList.toggle("light-theme");
        themeToggle.textContent = document.body.classList.contains("light-theme") ? "‚òÄÔ∏è" : "üåô";
      });
    }

    // Animate competence cards and their progress bars when they scroll into view
    const skillCards = document.querySelectorAll('.skill-card');
    const skillObserverOptions = { threshold: 0.5 };

    const skillObserver = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          // Add 'in-view' class to trigger scaling animation
          entry.target.classList.add('in-view');
          // Animate each progress bar from 0 to its target value (stored in the inline --progress variable)
          const progressBars = entry.target.querySelectorAll('.skill-progress');
          progressBars.forEach(pb => {
            // Get the target width from the inline style property --progress
            const targetWidth = getComputedStyle(pb).getPropertyValue('--progress');
            pb.style.width = targetWidth;
          });
          // Once animated, unobserve to prevent re-triggering
          observer.unobserve(entry.target);
        }
      });
    }, skillObserverOptions);

    skillCards.forEach(card => {
      skillObserver.observe(card);
    });

    const languageCards = document.querySelectorAll('.language-card');
    const languageObserverOptions = { threshold: 0.5 };
    const languageObserver = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('in-view');
          const progressBar = entry.target.querySelector('.language-progress');
          if (progressBar) {
            const targetWidth = getComputedStyle(progressBar).getPropertyValue('--progress');
            progressBar.style.width = targetWidth;
          }
          observer.unobserve(entry.target);
        }
      });
    }, languageObserverOptions);
    
    languageCards.forEach(card => {
      languageObserver.observe(card);
    });

    // Hide-on-scroll (desktop + mobile)
    let lastScrollY = window.scrollY || 0;
    const navEl = document.querySelector('nav[role="navigation"]');
    const SCROLL_DELTA = 6;          // small threshold to avoid jitter
    const MIN_SHOW_EDGE = 0;         // always show when at very top

    function handleScroll() {
      const y = window.scrollY || 0;
      if (!navEl) return;

      if (y <= MIN_SHOW_EDGE) {
        // Always show navbar at the top of the page
        navEl.classList.remove('nav-hidden');
      } else if (y > lastScrollY + SCROLL_DELTA) {
        // Scrolling DOWN: hide nav
        navEl.classList.add('nav-hidden');
      } else if (y < lastScrollY - SCROLL_DELTA) {
        // Scrolling UP: show nav
        navEl.classList.remove('nav-hidden');
      }
      lastScrollY = y;
    }

    window.addEventListener('scroll', handleScroll, { passive: true });

    // Add click/keyboard handlers for flip cards (mobile & non-hover support)
    const flipCards = document.querySelectorAll('.flip-card');
    flipCards.forEach(card => {
      // Make the whole card focusable and button-like (a11y)
      card.setAttribute('tabindex', '0');
      card.setAttribute('role', 'button');
      card.setAttribute('aria-pressed', 'false');

      // Only use click on devices where hover is not available (phones/tablets)
      const shouldUseClick =
        window.matchMedia('(hover: none)').matches ||
        window.matchMedia('(pointer: coarse)').matches;

      if (shouldUseClick) {
        card.addEventListener('click', (e) => {
          // Don't toggle if the user clicked a link inside the card
          if (e.target.closest('a')) return;

          const isFlipped = card.classList.toggle('flipped');
          card.setAttribute('aria-pressed', String(isFlipped));
        });
      }

      // Keyboard accessibility (works everywhere)
      card.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault(); // avoid page scroll on Space
          const isFlipped = card.classList.toggle('flipped');
          card.setAttribute('aria-pressed', String(isFlipped));
        }
      });
    });


    // Close drawer when clicking anywhere outside it (only when open)
    document.addEventListener('click', (e) => {
      const isOpen = menuToggle && menuToggle.getAttribute('aria-expanded') === 'true';
      if (!isOpen) return;
      const clickInsideMenu = mobileMenu && mobileMenu.contains(e.target);
      const clickOnToggle = menuToggle && menuToggle.contains(e.target);
      if (!clickInsideMenu && !clickOnToggle) {
        setMenuOpen(false);
      }
    });
      
});